@page "/questions/{QuestionId:int}"
@using BlzrQuiz.ServiceLayer
@using BlzrQuiz.Data.EfClasses
@using System.Diagnostics
@inject QuizService QService
@inject IUriHelper urihelper;

<h1>Edit</h1>

<h4>Question</h4>
<hr />
<div class="row">
    <div class="col-md-4">

        <EditForm Model="@Question" OnValidSubmit="@UpdateQuestion">
            <DataAnnotationsValidator />
            <ValidationSummary />
            <label for="classification">Primary Classification: </label>
            <InputSelect T="int" id="quiz" @bind-Value="@Question.CertificateId">
                @foreach (var cert in Certifications)
                {
                    if (cert.CertificationId == Question.CertificateId)
                    {
                        <option id="opt-@cert.CertificationId" selected value="@cert.CertificationId">@cert.Name</option>
                    }
                    else
                    {
                        <option id="opt-@cert.CertificationId" value="@cert.CertificationId">@cert.Name</option>
                    }
                }
            </InputSelect>
            <InputText id="name" @bind-Value="@Question.Text" />

            <button type="submit">Submit</button>
        </EditForm>
    </div>
</div>

<div>
    <a asp-page="./Index">Back to List</a>
</div>

@code {
    [Parameter]
    public int QuestionId { get; set; } 
    private IEnumerable<Certification> Certifications { get; set; } = new List<Certification>();
    private Question Question { get; set; } = new Question();

    protected override async Task OnInitializedAsync()
    {
        Question = await QService.GetQuestion(QuestionId);
        Certifications = await QService.GetCertifications();
    }
    void UpdateQuestion()
    {
        QService.UpdateQuestion(Question);
        urihelper.NavigateTo("/questions/overview");
    }
}