@using BlzrQuiz.Data.Entities
@inject IModalService ModalService
@inject NavigationManager NavManager
@if (ShowForm)
{
    <div class="simple-form" id="create-question-modal">
        <div class="form-group">

            <label for="question-text">Text: </label>
            <textarea @bind="Question.Text" id="question-text" type="text" class="form-control" placeholder="Enter Answer Text" />

        </div>
        <div class="form-group">
            <button type="button" class="btn btn-default btn-sm">
                <span class=""></span>Add Answer
            </button>
            @foreach (var answer in Answers)
            {
                @*Referencing Child Blazor Components: <ChildComponentName ChildComponent-Property="ThisComponent-Property></ChildComponentName>"*@
                <AnswerEntry Index="1"></AnswerEntry>
            }
        </div>
        <div>
            <button @onclick="SubmitForm" class="btn btn-primary">Submit</button>
            <button @onclick="Cancel" class="btn btn-secondary">Cancel</button>
        </div>
    </div>
}
else
{
    <div class="alert alert-success" role="alert">
        Submitted<br />
        <button class="btn btn-primary" @onclick="Done">Done</button>
    </div>
}

@code {
    [CascadingParameter] ModalParameters Parameters { get; set; }
    [CascadingParameter] BlazoredModal BlazoredModal { get; set; }
    bool ShowForm { get; set; } = true;
    private Question Question { get; set; } = new Question();
    private List<Answer> Answers { get; set; } = new List<Answer>();
    protected override void OnInitialized()
    {

        BlazoredModal.SetTitle("Create Question");
    }
    void SubmitForm()
    {
        ShowForm = false;
    }
    void Done()
    {
        ModalService.Close(ModalResult.Ok($"Question was created successfully."));
    }

    void Cancel()
    {
        ModalService.Close(ModalResult.Cancel());
    }

}
